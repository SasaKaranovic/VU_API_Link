name: Build API Link

on:
  push:
    branches:
    - 'build_*'
  pull_request:
    paths:
      - "apilink/**.py"
      - "apilink/www/**"
      - "apilink/upload/**"
      - ".github/workflows/pyinstaller.yaml"

jobs:
  Installer:

    runs-on: windows-latest

    env:
      App_Packages_Archive: API_LINK
      Actions_Allow_Unsecure_Commands: true # Allows AddPAth and SetEnv commands

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        update-environment: true
        cache: 'pip' # caching pip dependencies

    # Install python requirements
    - run: pip install -r apilink/requirements.txt

    # Create artifacts folder
    - name: Create Artifact Folder
      run: New-Item -Path '${{ github.workspace }}' -Name "Artifacts" -ItemType "directory"

    - name: Set pythonpath
      run: |
        echo "PYTHONPATH=${{ github.workspace }}" >> $GITHUB_ENV

    - name: Add version stamp
      run: |
        python3 ${{ github.workspace }}/apilink/make_version.py

    # PyInstaller
    - name: Run PyInstaller
      run: >
        cd apilink &&
        pyinstaller.exe --name API_LINK
        --distpath="${{ github.workspace }}/Artifacts/dist"
        --clean
        --path="${{ github.workspace }}"
        --icon="www/favicon.ico"
        --add-data="www/assets/css/*;www/assets/css"
        --add-data="www/assets/img/*;www/assets/img"
        --add-data="www/assets/js/*;www/assets/js"
        --add-data="www/views/*;www/views"
        --add-data="www/*.png;www/"
        --add-data="www/*.html;www/"
        --add-data="www/*.ico;www/"
        --hiddenimport="pywin32"
        --hiddenimport="win32timezone"
        --uac-admin
        --noconsole
        server.py

    # Upload build artifacts
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.App_Packages_Archive }}
        path: ${{ github.workspace }}/Artifacts/dist/API_LINK/*
      if: ${{ always() }}

    # Install NSIS
    - name: Install NSIS
      run: |
        choco install nsis

    - name: Create installer
      run: |
        makensis /DINSTALLEROUTPUT="${{ github.workspace }}\Artifacts\api_link_installer.exe" /DDIRDIST="${{ github.workspace }}\Artifacts\dist\API_LINK" /DDIRSOURCE="${{ github.workspace }}\apilink\" ${{ github.workspace }}\apilink\installer\install.nsi


    # Upload installer
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.App_Packages_Archive }}_installer.exe
        path: ${{ github.workspace }}/Artifacts/api_link_installer.exe
      if: ${{ always() }}
